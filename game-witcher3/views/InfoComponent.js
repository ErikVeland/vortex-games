"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const BS = __importStar(require("react-bootstrap"));
const common_1 = require("../common");
const vortex_api_1 = require("vortex-api");
const react_i18next_1 = require("react-i18next");
function InfoComponent(props) {
    const { onToggleModsState } = props;
    const t = (0, react_i18next_1.useTranslation)(common_1.I18N_NAMESPACE).t;
    const toggleModsState = React.useCallback((enable) => {
        onToggleModsState(enable);
    }, [onToggleModsState]);
    return (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: '12px', marginRight: '16px' } },
        React.createElement("div", null,
            React.createElement("p", null,
                t('You can adjust the load order for The Witcher 3 by dragging and dropping '
                    + 'mods up or down on this page.  If you are using several mods that add scripts you may need to use '
                    + 'the Witcher 3 Script merger. For more information see: ', { ns: common_1.I18N_NAMESPACE }),
                React.createElement("a", { onClick: () => vortex_api_1.util.opn('https://wiki.nexusmods.com/index.php/Modding_The_Witcher_3_with_Vortex') }, t('Modding The Witcher 3 with Vortex.', { ns: common_1.I18N_NAMESPACE })))),
        React.createElement("div", { style: { height: '80%' } },
            React.createElement("p", null, t('Please note:', { ns: common_1.I18N_NAMESPACE })),
            React.createElement("ul", null,
                React.createElement("li", null, t('For Witcher 3, the mod with the lowest index number (by default, the mod sorted at the top) overrides mods with a higher index number.', { ns: common_1.I18N_NAMESPACE })),
                React.createElement("li", null, t('If you cannot see your mod in this load order, you may need to add it manually (see our wiki for details).', { ns: common_1.I18N_NAMESPACE })),
                React.createElement("li", null, t('When managing menu mods, mod settings changed inside the game will be detected by Vortex as external changes - that is expected, '
                    + 'choose to use the newer file and your settings will be made persistent.', { ns: common_1.I18N_NAMESPACE })),
                React.createElement("li", null, t('Merges generated by the Witcher 3 Script merger must be loaded first and are locked in the first load order slot.', { ns: common_1.I18N_NAMESPACE }))),
            React.createElement(BS.Button, { onClick: () => toggleModsState(false), style: { marginBottom: '5px', width: 'min-content' } }, t('Disable All')),
            React.createElement("br", null),
            React.createElement(BS.Button, { onClick: () => toggleModsState(true), style: { marginBottom: '5px', width: 'min-content' } }, t('Enable All ')))));
}
exports.default = InfoComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5mb0NvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkluZm9Db21wb25lbnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSw2Q0FBK0I7QUFDL0Isb0RBQXNDO0FBQ3RDLHNDQUEyQztBQUUzQywyQ0FBOEM7QUFDOUMsaURBQStDO0FBTS9DLFNBQXdCLGFBQWEsQ0FBQyxLQUF5QjtJQUM3RCxNQUFNLEVBQUUsaUJBQWlCLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFDcEMsTUFBTSxDQUFDLEdBQUcsSUFBQSw4QkFBYyxFQUFDLHVCQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0MsTUFBTSxlQUFlLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO1FBQ25ELGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzVCLENBQUMsRUFBRSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztJQUV4QixPQUFPLENBQ0wsNkJBQUssS0FBSyxFQUFFLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRTtRQUN0RjtZQUNFO2dCQUNHLENBQUMsQ0FBQywyRUFBMkU7c0JBQzFFLG9HQUFvRztzQkFDcEcseURBQXlELEVBQUUsRUFBRSxFQUFFLEVBQUUsdUJBQWMsRUFBRSxDQUFDO2dCQUN0RiwyQkFBRyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsaUJBQUksQ0FBQyxHQUFHLENBQUMsd0VBQXdFLENBQUMsSUFDakcsQ0FBQyxDQUFDLG9DQUFvQyxFQUFFLEVBQUUsRUFBRSxFQUFFLHVCQUFjLEVBQUUsQ0FBQyxDQUM5RCxDQUNGLENBQ0E7UUFDTiw2QkFBSyxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO1lBQzNCLCtCQUFJLENBQUMsQ0FBQyxjQUFjLEVBQUUsRUFBRSxFQUFFLEVBQUUsdUJBQWMsRUFBRSxDQUFDLENBQUs7WUFDbEQ7Z0JBQ0UsZ0NBQUssQ0FBQyxDQUFDLHdJQUF3SSxFQUFFLEVBQUUsRUFBRSxFQUFFLHVCQUFjLEVBQUUsQ0FBQyxDQUFNO2dCQUM5SyxnQ0FBSyxDQUFDLENBQUMsNEdBQTRHLEVBQUUsRUFBRSxFQUFFLEVBQUUsdUJBQWMsRUFBRSxDQUFDLENBQU07Z0JBQ2xKLGdDQUFLLENBQUMsQ0FBQyxtSUFBbUk7c0JBQ3RJLHlFQUF5RSxFQUMzRSxFQUFFLEVBQUUsRUFBRSx1QkFBYyxFQUFFLENBQUMsQ0FBTTtnQkFDL0IsZ0NBQUssQ0FBQyxDQUFDLG1IQUFtSCxFQUFFLEVBQUUsRUFBRSxFQUFFLHVCQUFjLEVBQUUsQ0FBQyxDQUFNLENBQ3RKO1lBQ0wsb0JBQUMsRUFBRSxDQUFDLE1BQU0sSUFDUixPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxFQUNyQyxLQUFLLEVBQUUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxhQUFhLEVBQUUsSUFFbkQsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUNQO1lBQ1osK0JBQU07WUFDTixvQkFBQyxFQUFFLENBQUMsTUFBTSxJQUNSLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQ3BDLEtBQUssRUFBRSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxJQUVuRCxDQUFDLENBQUMsYUFBYSxDQUFDLENBQ1AsQ0FDUixDQUNGLENBQ1QsQ0FBQztBQUNKLENBQUM7QUE3Q0QsZ0NBNkNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNXaW5kb3dzIH0gZnJvbSAndm9ydGV4LWFwaSc7XG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgQlMgZnJvbSAncmVhY3QtYm9vdHN0cmFwJztcbmltcG9ydCB7IEkxOE5fTkFNRVNQQUNFIH0gZnJvbSAnLi4vY29tbW9uJztcblxuaW1wb3J0IHsgRmxleExheW91dCwgdXRpbCB9IGZyb20gJ3ZvcnRleC1hcGknO1xuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0JztcblxuaW50ZXJmYWNlIEluZm9Db21wb25lbnRQcm9wcyB7XG4gIG9uVG9nZ2xlTW9kc1N0YXRlOiAoZW5hYmxlOiBib29sZWFuKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmZvQ29tcG9uZW50KHByb3BzOiBJbmZvQ29tcG9uZW50UHJvcHMpIHtcbiAgY29uc3QgeyBvblRvZ2dsZU1vZHNTdGF0ZSB9ID0gcHJvcHM7XG4gIGNvbnN0IHQgPSB1c2VUcmFuc2xhdGlvbihJMThOX05BTUVTUEFDRSkudDtcbiAgY29uc3QgdG9nZ2xlTW9kc1N0YXRlID0gUmVhY3QudXNlQ2FsbGJhY2soKGVuYWJsZSkgPT4ge1xuICAgIG9uVG9nZ2xlTW9kc1N0YXRlKGVuYWJsZSk7XG4gIH0sIFtvblRvZ2dsZU1vZHNTdGF0ZV0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLCBnYXA6ICcxMnB4JywgbWFyZ2luUmlnaHQ6ICcxNnB4JyB9fT5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8cD5cbiAgICAgICAgICAgIHt0KCdZb3UgY2FuIGFkanVzdCB0aGUgbG9hZCBvcmRlciBmb3IgVGhlIFdpdGNoZXIgMyBieSBkcmFnZ2luZyBhbmQgZHJvcHBpbmcgJ1xuICAgICAgICAgICAgICArICdtb2RzIHVwIG9yIGRvd24gb24gdGhpcyBwYWdlLiAgSWYgeW91IGFyZSB1c2luZyBzZXZlcmFsIG1vZHMgdGhhdCBhZGQgc2NyaXB0cyB5b3UgbWF5IG5lZWQgdG8gdXNlICdcbiAgICAgICAgICAgICAgKyAndGhlIFdpdGNoZXIgMyBTY3JpcHQgbWVyZ2VyLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBzZWU6ICcsIHsgbnM6IEkxOE5fTkFNRVNQQUNFIH0pfVxuICAgICAgICAgICAgPGEgb25DbGljaz17KCkgPT4gdXRpbC5vcG4oJ2h0dHBzOi8vd2lraS5uZXh1c21vZHMuY29tL2luZGV4LnBocC9Nb2RkaW5nX1RoZV9XaXRjaGVyXzNfd2l0aF9Wb3J0ZXgnKX0+XG4gICAgICAgICAgICAgIHt0KCdNb2RkaW5nIFRoZSBXaXRjaGVyIDMgd2l0aCBWb3J0ZXguJywgeyBuczogSTE4Tl9OQU1FU1BBQ0UgfSl9XG4gICAgICAgICAgICA8L2E+XG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBzdHlsZT17eyBoZWlnaHQ6ICc4MCUnIH19PlxuICAgICAgICAgIDxwPnt0KCdQbGVhc2Ugbm90ZTonLCB7IG5zOiBJMThOX05BTUVTUEFDRSB9KX08L3A+XG4gICAgICAgICAgPHVsPlxuICAgICAgICAgICAgPGxpPnt0KCdGb3IgV2l0Y2hlciAzLCB0aGUgbW9kIHdpdGggdGhlIGxvd2VzdCBpbmRleCBudW1iZXIgKGJ5IGRlZmF1bHQsIHRoZSBtb2Qgc29ydGVkIGF0IHRoZSB0b3ApIG92ZXJyaWRlcyBtb2RzIHdpdGggYSBoaWdoZXIgaW5kZXggbnVtYmVyLicsIHsgbnM6IEkxOE5fTkFNRVNQQUNFIH0pfTwvbGk+XG4gICAgICAgICAgICA8bGk+e3QoJ0lmIHlvdSBjYW5ub3Qgc2VlIHlvdXIgbW9kIGluIHRoaXMgbG9hZCBvcmRlciwgeW91IG1heSBuZWVkIHRvIGFkZCBpdCBtYW51YWxseSAoc2VlIG91ciB3aWtpIGZvciBkZXRhaWxzKS4nLCB7IG5zOiBJMThOX05BTUVTUEFDRSB9KX08L2xpPlxuICAgICAgICAgICAgPGxpPnt0KCdXaGVuIG1hbmFnaW5nIG1lbnUgbW9kcywgbW9kIHNldHRpbmdzIGNoYW5nZWQgaW5zaWRlIHRoZSBnYW1lIHdpbGwgYmUgZGV0ZWN0ZWQgYnkgVm9ydGV4IGFzIGV4dGVybmFsIGNoYW5nZXMgLSB0aGF0IGlzIGV4cGVjdGVkLCAnXG4gICAgICAgICAgICAgICsgJ2Nob29zZSB0byB1c2UgdGhlIG5ld2VyIGZpbGUgYW5kIHlvdXIgc2V0dGluZ3Mgd2lsbCBiZSBtYWRlIHBlcnNpc3RlbnQuJyxcbiAgICAgICAgICAgICAgeyBuczogSTE4Tl9OQU1FU1BBQ0UgfSl9PC9saT5cbiAgICAgICAgICAgIDxsaT57dCgnTWVyZ2VzIGdlbmVyYXRlZCBieSB0aGUgV2l0Y2hlciAzIFNjcmlwdCBtZXJnZXIgbXVzdCBiZSBsb2FkZWQgZmlyc3QgYW5kIGFyZSBsb2NrZWQgaW4gdGhlIGZpcnN0IGxvYWQgb3JkZXIgc2xvdC4nLCB7IG5zOiBJMThOX05BTUVTUEFDRSB9KX08L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPEJTLkJ1dHRvblxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdG9nZ2xlTW9kc1N0YXRlKGZhbHNlKX1cbiAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpbkJvdHRvbTogJzVweCcsIHdpZHRoOiAnbWluLWNvbnRlbnQnIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge3QoJ0Rpc2FibGUgQWxsJyl9XG4gICAgICAgICAgPC9CUy5CdXR0b24+XG4gICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgPEJTLkJ1dHRvblxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdG9nZ2xlTW9kc1N0YXRlKHRydWUpfVxuICAgICAgICAgICAgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAnNXB4Jywgd2lkdGg6ICdtaW4tY29udGVudCcgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dCgnRW5hYmxlIEFsbCAnKX1cbiAgICAgICAgICA8L0JTLkJ1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdfQ==